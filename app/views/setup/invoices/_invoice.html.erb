
<div class="invoice-container">
<% if invoice.activity_results %>

  <% invoice.activity_results.flatten.group_by(&:package).map do |package, results| %>
  <a name="<%= (package.name+"-"+invoice.date.strftime('%Y-%m')).underscore%>"></a>
  <h2><%= package.name %> at <%=invoice.date.strftime('%Y-%m')%>  </h2>

  org unit(s) : <%= package.linked_org_units(@org_unit, @pyramid).map(&:name).join(", ") %><br>
  <%  periods = package.periods(Periods.year_month(invoice.date)) %>
  date range : <%= periods.map { |period| [period.start_date, period.end_date] }.flatten.minmax.map(&:to_s).join(' <i class="fas fa-arrow-right" aria-hidden="true"></i> ').html_safe %> <br>
  periods : <%= periods.map(&:to_dhis2).join(", ") %><br>
  <table class="table invoice num-span-table table-striped">
    <thead>
      <tr>

      <%package.invoice_details.each do |detail| %>

         <th><%=detail.humanize %> </th>
      <%end%>
    </tr>
    </thead>

    <tbody>
    <% states = package.states.index_by(&:code) %>
    <%results.sort_by{|r| r.activity.id }.each do |result|%>
      <tr>
       <% package.invoice_details.each do |detail|%>
       <% classes = [] %>
       <% classes.push "formula-input" if states[detail] %>
       <% classes.push "formula-output" if result.package.activity_rule.formula(detail)&.formula_mapping(result.activity) %>

       <% hint = states[detail] ? [result.activity.activity_state(states[detail])&.external_reference,result.activity.activity_state(states[detail])&.name] : [
         result.package.activity_rule.formula(detail)&.expression,
         result.package.activity_rule.formula(detail)&.formula_mapping(result.activity)&.external_reference,
         @datacompound.data_element(result.package.activity_rule.formula(detail)&.formula_mapping(result.activity)&.external_reference)&.name,
         ] %>
       <td class="popper" data-toggle="popover" data-placement="bottom">
         <span class="<%= 'num-span' if result.solution[detail].is_a? Numeric %> <%= classes.join(" ") %>"><%= d_to_s(result.solution[detail]) %></span>
         <div class="popper-content hide">
           Mapping :
           <ul>
             <% hint.each do |hint| %>
               <%= hint %></br>
             <%end%>
           </ul>
           Solution :
           <ul>
           <% result.solution.each do |k,v|%>
            <b><%= k %></b> = <%= v %> </br>
           <% end %>
           </ul>
           Initial equation and facts :
           <ul>
           <% result.variables.each do |k,v|%>
            <b><%= k %></b> = <%= v %> </br>
           <% end %>
           </ul>
           </div>
      </td>


       <% end%>
     </tr>
    <%end%>
   </tbody>
  </table>

    <% if invoice.package_results %>

    <div class="container">
    <% package.package_rule.formulas.map(&:code).map do |item| %>
      <%package_result = invoice.package_results.find { |pr| pr.package == package }%>
      <%next unless package_result.solution[item]%>
        <div class="row">
           <div class="col-md-3">
             <%=item.humanize %> :
          </div>
             <% classes = [] %>
             <% external_reference = package_result.package.package_rule.formula(item)&.formula_mapping&.external_reference %>
             <% classes.push "formula-output" if external_reference %>
          <div class="col-md-4 popper <%= classes.join(" ") %>" data-toggle="popover" data-placement="bottom">
            <b><%= d_to_s(package_result.solution[item])%></b>

            <div class="popper-content hide">
              Mapping :
              <ul>
                <%= package_result.package.package_rule.formula(item)&.expression %> <br>
                <%= external_reference %> <br>
                <%= @datacompound.data_element(external_reference)&.name %> <br>
              </ul>
              Solution :
              <ul>
              <% package_result.solution.each do |k,v|%>
               <b><%= k %></b> = <%= v %> </br>
              <% end %>
              </ul>
              Initial equation and facts :
              <ul>
              <% package_result.variables.each do |k,v|%>
               <b><%= k %></b> = <%= v %> </br>
              <% end %>
              </ul>
              </div>


          </div>
        </div>
    <%end%>
    </div>
    <%end%>
  <%end%>
  <%if invoice.payment_result %>
  <h2>Payments <%= invoice.date %></h2>

<button class="pull-right btn btn-default" data-toggle="collapse" data-target="#payment-descriptors-<%= invoice.payment_result.payment_rule.rule.id %>">Show payment descriptors</button>

    <div class="container">
      <%invoice.payment_result.payment_rule.rule.formulas.map do |formula|%>
        <div class="row">
           <div class="col-md-3">
             <%=formula.code.humanize %> :
          </div>
          <% classes = [] %>
          <% external_reference = formula.formula_mapping&.external_reference %>
          <% classes.push "formula-output" if external_reference %>
          <div class="col-md-4 popper <%= classes.join(" ") %>" data-toggle="popover" data-placement="bottom">
            <b><%= d_to_s( invoice.payment_result.solution[formula.code])%></b>

            <div class="popper-content hide">
              Mapping :
              <ul>
                <%= formula.expression %> <br>
                <%= external_reference %> <br>
                <%= @datacompound.data_element(external_reference)&.name %> <br>
              </ul>
              Solution :
              <ul>
              <% invoice.payment_result.solution.each do |k,v|%>
               <b><%= k %></b> = <%= v %> </br>
              <% end %>
              </ul>
              Initial equation and facts :
              <ul>
              <% invoice.payment_result.variables.each do |k,v|%>
               <b><%= k %></b> = <%= v %> </br>
              <% end %>
              </ul>
              </div>

          </div>
        </div>
      <%end%>
    </div>
  </div>
  <%end%>

<%end%>
</div>
